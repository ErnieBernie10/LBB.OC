// This file is auto-generated by @hey-api/openapi-ts

export const AddReservationCommandSchema = {
    required: ['firstname', 'lastname', 'email', 'phoneNumber'],
    type: 'object',
    properties: {
        firstname: {
            maxLength: 200,
            type: 'string'
        },
        lastname: {
            maxLength: 200,
            type: 'string'
        },
        attendeeCount: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        email: {
            maxLength: 200,
            type: 'string'
        },
        phoneNumber: {
            maxLength: 20,
            type: 'string'
        },
        sessionId: {
            type: 'string',
            format: 'uuid'
        }
    }
} as const;

export const AuthenticatedResponseDtoSchema = {
    type: 'object',
    properties: {
        email: {
            type: 'string'
        },
        fullName: {
            type: 'string'
        },
        token: {
            type: 'string'
        },
        tenant: {
            '$ref': '#/components/schemas/Tenant'
        },
        roles: {
            type: 'array',
            items: {
                type: 'string'
            }
        },
        tokenExpiry: {
            type: 'string',
            format: 'date-time'
        }
    }
} as const;

export const CreateSessionCommandSchema = {
    required: ['type', 'title', 'description', 'start', 'end', 'tenantId'],
    type: 'object',
    properties: {
        type: {
            '$ref': '#/components/schemas/SessionType'
        },
        title: {
            maxLength: 200,
            type: 'string'
        },
        description: {
            maxLength: 2000,
            type: 'string'
        },
        start: {
            type: 'string',
            format: 'date-time'
        },
        end: {
            type: 'string',
            format: 'date-time'
        },
        location: {
            maxLength: 200,
            type: 'string'
        },
        capacity: {
            maximum: 2147483647,
            minimum: 1,
            type: 'integer',
            format: 'int32'
        },
        tenantId: {
            type: 'string'
        }
    }
} as const;

export const EditSessionCommandSchema = {
    required: ['title', 'description'],
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        title: {
            maxLength: 200,
            type: 'string'
        },
        description: {
            maxLength: 2000,
            type: 'string'
        },
        location: {
            maxLength: 200,
            type: 'string',
            nullable: true
        },
        capacity: {
            maximum: 2147483647,
            minimum: 1,
            type: 'integer',
            format: 'int32'
        }
    }
} as const;

export const EditTimeslotCommandSchema = {
    type: 'object',
    properties: {
        sessionId: {
            type: 'string',
            format: 'uuid'
        },
        start: {
            type: 'string',
            format: 'date-time'
        },
        end: {
            type: 'string',
            format: 'date-time'
        }
    }
} as const;

export const LoginRequestSchema = {
    required: ['email', 'password'],
    type: 'object',
    properties: {
        email: {
            type: 'string'
        },
        password: {
            type: 'string'
        },
        twoFactorCode: {
            type: 'string',
            nullable: true
        },
        twoFactorRecoveryCode: {
            type: 'string',
            nullable: true
        }
    }
} as const;

export const PagedResponseDtoOfSessionBasicSchema = {
    type: 'object',
    properties: {
        total: {
            type: 'integer',
            format: 'int32'
        },
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/SessionBasic'
            }
        }
    }
} as const;

export const ReservationResponseDtoSchema = {
    required: ['reference', 'firstname', 'lastname', 'attendeeCount', 'email', 'phone'],
    type: 'object',
    properties: {
        reference: {
            type: 'string'
        },
        firstname: {
            type: 'string'
        },
        lastname: {
            type: 'string'
        },
        attendeeCount: {
            type: 'integer',
            format: 'int32'
        },
        email: {
            type: 'string'
        },
        phone: {
            type: 'string'
        }
    }
} as const;

export const SessionBasicSchema = {
    required: ['id', 'title', 'description', 'location', 'start', 'end', 'type', 'capacity', 'attendeeCount'],
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        title: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        location: {
            type: 'string'
        },
        start: {
            type: 'string',
            format: 'date-time'
        },
        end: {
            type: 'string',
            format: 'date-time'
        },
        type: {
            '$ref': '#/components/schemas/SessionType'
        },
        capacity: {
            type: 'integer',
            format: 'int32'
        },
        attendeeCount: {
            type: 'integer',
            format: 'int32'
        }
    }
} as const;

export const SessionResponseDtoSchema = {
    required: ['title', 'description', 'start', 'end', 'type'],
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        title: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        location: {
            type: 'string'
        },
        capacity: {
            type: 'integer',
            format: 'int32'
        },
        start: {
            type: 'string',
            format: 'date-time'
        },
        end: {
            type: 'string',
            format: 'date-time'
        },
        type: {
            '$ref': '#/components/schemas/SessionType2'
        },
        reservations: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ReservationResponseDto'
            }
        }
    }
} as const;

export const SessionTypeSchema = {
    enum: ['Individual', 'Group']
} as const;

export const SessionType2Schema = {
    type: 'integer'
} as const;

export const TenantSchema = {
    required: ['id'],
    type: 'object',
    properties: {
        id: {
            maxLength: 20,
            type: 'string'
        },
        description: {
            maxLength: 2000,
            type: 'string'
        },
        displayName: {
            maxLength: 200,
            type: 'string'
        },
        name: {
            maxLength: 200,
            type: 'string'
        }
    }
} as const;